version: "3"
services:
  zookeeper:
    image: "zookeeper:3.4"
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: "wurstmeister/kafka:0.10.1.1"
    container_name: kafka
    ports:
      - "9092:9092"
      - "32773:32773"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/kafka_init.sh:/root/kafka_init.sh
    command: "/root/kafka_init.sh"

  cassandra:
    image: "cassandra:3.10"
    container_name: cassandra
    volumes:
      - ./conf/cassandra_init.sh:/var/lib/cassandra/cassandra_init.sh
      - ./conf/cassandra.conf:/var/lib/cassandra/cassandra.conf
    command: "/var/lib/cassandra/cassandra_init.sh cassandra -f"

  redis:
    image: "redis:3.2.8"
    container_name: redis
    ports:
      - "6379"
      - "16379"
    volumes:
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./conf/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./conf/redis_init.sh:/usr/local/etc/redis/redis_init.sh
    command: sh -c "chmod +x /usr/local/etc/redis/redis_init.sh && /usr/local/etc/redis/redis_init.sh"

  kerberos:
    image: "kerberos_image"
    container_name: kerberos
    environment:
      - CASSANDRA_HOSTNAME=cassandra
      - CASSANDRA_PORT=9042
    ports:
      - "8080:8080"
    volumes:
      - ./conf/wait_for_it.sh:/home/kerberos/wait_for_it.sh
      - ./conf/node.config:/opt/jboss/wildfly/standalone/configuration/node.config
      - ./conf/kafka.brokers:/opt/jboss/wildfly/standalone/configuration/kafka.brokers
      - ./conf/redis.sentinels:/opt/jboss/wildfly/standalone/configuration/redis.sentinels
    depends_on:
      - kafka
      - redis
      - cassandra
    command: sh -c "/home/kerberos/wait_for_it.sh /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0"

  kong-database:
    image: postgres:9.4
    container_name: kong-database
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong

  kong:
    image: kong-plugin-development
    container_name: kong
    restart: always
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 7946:7946
      - 7946:7946/udp
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    volumes:    
      - ./conf/kong_config:/etc/kong/
      - /home/henrique/workspace/platiot/mutual-authentication/plugin:/plugins

     
