version: "2.1"
services:
  kong-database:
    image: postgres:9.4
    restart: always
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 6s
      retries: 15

  kong-migration:
    image: dojot/kong
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    command: kong migrations up

  kong:
    image: dojot/kong
    restart: always
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_started
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
    ports:
      - 8000:8000
      - 8001:8001
    volumes:
      - /home/henrique/workspace/platiot/mutual-authentication/ma-kong-plugin:/plugins/ma-kong-plugin

  elasticsearch:
    image: "elasticsearch"

#  kibana:
#    image: kibana
#    ports:
#      - 5601:5601

  zookeeper:
    image: "zookeeper:3.4"

  kafka:
    image: "ches/kafka:0.10.1.1"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ZOOKEEPER_IP: zookeeper
      KAFKA_NUM_PARTITIONS: 10

  cassandra:
    image: "cassandra:3.10"

  redis:
    image: "redis:3.2.8"
    volumes:
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./conf/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./conf/redis_init.sh:/usr/local/etc/redis/redis_init.sh
    command: sh -c "chmod +x /usr/local/etc/redis/redis_init.sh && /usr/local/etc/redis/redis_init.sh"

  kerberos:
    image: "kerberos_image_test"
    environment:
      - CASSANDRA_HOSTNAME=cassandra
      - CASSANDRA_PORT=9042
    ports:
      - 8080:8080
    volumes:
      - ./conf/node.config:/opt/jboss/wildfly/standalone/configuration/node.config
      - ./conf/kafka.brokers:/opt/jboss/wildfly/standalone/configuration/kafka.brokers
      - ./conf/redis.sentinels:/opt/jboss/wildfly/standalone/configuration/redis.sentinels
      - ./application:/home/kerberos/application
    depends_on:
      - kafka
      - redis
      - cassandra

